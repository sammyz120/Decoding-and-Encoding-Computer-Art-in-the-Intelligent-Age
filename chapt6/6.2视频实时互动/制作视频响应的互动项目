import processing.video.*;

Capture cam;
PImage prevFrame;
color drawColor;

void setup() {
  size(640, 480);
  cam = new Capture(this, 640, 480);
  cam.start();
  prevFrame = createImage(640, 480, RGB);
  drawColor = color(0, 255, 0);
}

void draw() {
  if (cam.available()) {
    cam.read();
  }
  cam.loadPixels();
  prevFrame.loadPixels();

  loadPixels();

  for (int x = 1; x < width - 1; x++) {
    for (int y = 1; y < height - 1; y++) {
      int loc = x + y * width;
      color currColor = cam.pixels[loc];
      color prevColor = prevFrame.pixels[loc];

      // 计算当前帧和上一帧的像素差异
      float diff = dist(red(currColor), green(currColor), blue(currColor),
                        red(prevColor), green(prevColor), blue(prevColor));

      // 如果差异超过阈值，检测到运动变化
      if (diff > 30) {
        pixels[loc] = drawColor; // 用动态颜色绘制
      } else {
        pixels[loc] = color(0);
      }
    }
  }
  updatePixels();

  // 更新上一帧为当前帧
  prevFrame.copy(cam, 0, 0, cam.width, cam.height, 0, 0, cam.width, cam.height);

  // 随着时间变换绘制颜色
  drawColor = color((frameCount * 2) % 255, 255 - (frameCount * 2) % 255, (frameCount * 3) % 255);
} 
