Particle[] particles; // 粒子数组
int maxParticles = 100; // 最大粒子数量

void setup() {
  size(800, 600);
  particles = new Particle[maxParticles]; // 初始化粒子数组
  
  // 初始化粒子
  for (int i = 0; i < particles.length; i++) {
    particles[i] = new Particle(random(width), random(height));
  }
}

void draw() {
  background(0);
  
  // 更新并显示每个粒子
  for (int i = 0; i < particles.length; i++) {
    particles[i].update(); // 更新粒子状态
    particles[i].show();   // 渲染粒子
    if (particles[i].isDead()) { // 如果粒子寿命结束
      particles[i] = new Particle(random(width), random(height)); // 重置粒子
    }
  }
}

// 粒子类
class Particle {
  PVector position; // 位置
  PVector velocity; // 速度
  PVector acceleration; // 加速度
  float lifespan; // 寿命
  
  // 构造方法
  Particle(float x, float y) {
    position = new PVector(x, y);
    velocity = PVector.random2D().mult(random(1, 3)); // 随机方向的速度
    acceleration = new PVector(0, 0.05); // 加速度（模拟重力）
    lifespan = 255; // 寿命
  }
  
  // 更新粒子状态
  void update() {
    velocity.add(acceleration); // 速度受加速度影响
    position.add(velocity);     // 位置受速度影响
    lifespan -= 2;              // 寿命减少
  }
  
  // 渲染粒子
  void show() {
    noStroke();
    fill(255, lifespan); // 根据寿命调整透明度
    ellipse(position.x, position.y, 8, 8); // 画粒子
  }
  
  // 判断粒子是否已死亡
  boolean isDead() {
    return lifespan < 0;
  }
}
